var doc = app.activeDocument;var myFileName = doc.name;if(myFileName.indexOf(".indd")!=-1){	var myRegularExpression = /.indd/gi	myFileName = myFileName.replace(myRegularExpression, "");}var current_path = app.activeDocument.filePath.fsName.toString();with(app.pdfExportPreferences){//Basic PDF output options.pageRange = PageRange.allPages;acrobatCompatibility = AcrobatCompatibility.acrobat6;exportGuidesAndGrids = false;exportLayers = false;exportNonPrintingObjects = false;exportReaderSpreads = false;generateThumbnails = false;try{ignoreSpreadOverrides = false;}catch(e){}includeBookmarks = false;includeHyperlinks = false;includeICCProfiles = false;includeSlugWithPDF = false;includeStructure = false;interactiveElementsOption = InteractiveElementsOptions.doNotInclude;//Setting subsetFontsBelow to zero disallows font subsetting;//set subsetFontsBelow to some other value to use font subsetting.subsetFontsBelow = 0;////Bitmap compression/sampling/quality options.colorBitmapCompression = BitmapCompression.AUTO_COMPRESSION;colorBitmapQuality = CompressionQuality.HIGH;colorBitmapSampling = Sampling.BICUBIC_DOWNSAMPLE;colorBitmapSamplingDPI = 150;thresholdToCompressColor = 150;//is set to none.grayscaleBitmapCompression = BitmapCompression.AUTO_COMPRESSION;grayscaleBitmapQuality = CompressionQuality.HIGH;grayscaleBitmapSampling = Sampling.BICUBIC_DOWNSAMPLE;thresholdToCompressGray = 150;grayscaleBitmapSamplingDPI = 150;//is set to none.monochromeBitmapCompression = MonoBitmapCompression.CCIT4;monochromeBitmapSampling = Sampling.BICUBIC_DOWNSAMPLE;thresholdToCompressMonochrome = 150;monochromeBitmapSamplingDPI = 150;//monochromeBitmapSampling is set to none.////Other compression options.compressionType = PDFCompressionType.compressObjects; //COMPRESS_OBJECTScompressTextAndLineArt = true;cropImagesToFrames = true;optimizePDF = true;////Printers marks and prepress options.//Get the bleed amounts from the document's bleed.bleedBottom = 0;bleedTop = 0;bleedInside = 0; bleedOutside = 0;// bleedBottom = app.activeDocument.documentPreferences.documentBleedBottomOffset;// bleedTop = app.activeDocument.documentPreferences.documentBleedTopOffset;// bleedInside = app.activeDocument.documentPreferences.documentBleedInsideOrLeftOffset;// bleedOutside = app.activeDocument.documentPreferences.documentBleedOutsideOrRightOffset;bleedMarks = false;colorBars = false;colorTileSize = 128;grayTileSize = 128;cropMarks = false;omitBitmaps = false;omitEPS = false;omitPDF = false;pageInformationMarks = false;pageMarksOffset = "12pt";pdfColorSpace = PDFColorSpace.RGB;//Default mark type.pdfMarkType = 1147563124;printerMarkWeight = PDFMarkWeight.p125pt;registrationMarks = false;try{simulateOverprint = false;}catch(e){}useDocumentBleedWithPDF = false;//Set viewPDF to true to open the PDF in Acrobat or Adobe Reader.viewPDF = true;}myFile = current_path + "/" + myFileName + ".pdf";var pdfPresetsList = app.pdfExportPresets.everyItem().name;	//Now export the document. You'll have to fill in your own file path.app.activeDocument.exportFile(ExportFormat.pdfType, myFile, false);// var preset = app.printerPresets.itemByName("100");// 	app.scriptPreferences.userInteractionLevel = UserInteractionLevels.neverInteract; // vremenno otkluchit' soobsheniya// 	doc.exportFile(ExportFormat.pdfType, myFile, true, "Screen 150");// 	//document.print(false, preset);// 	app.scriptPreferences.userInteractionLevel = UserInteractionLevels.interactWithAll; // vkluchit' opyat'	